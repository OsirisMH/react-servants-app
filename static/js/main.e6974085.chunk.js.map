{"version":3,"sources":["assets/servants sync /^/.*$","assets/servants/caster-anastasia.png","assets/servants/caster-crane.png","assets/servants/caster-leonardo.png","assets/servants/caster-medea.png","assets/servants/caster-merlin.png","assets/servants/caster-nitocris.png","assets/servants/caster-paracelsus.png","assets/servants/caster-shakespeare.png","assets/servants/caster-tamamo.png","assets/servants/caster-zhuge.png","assets/servants/saber-arthur.png","assets/servants/saber-artoria.png","assets/servants/saber-caesar.png","assets/servants/saber-dioscuri.png","assets/servants/saber-mordred.png","assets/servants/saber-muramasa.png","assets/servants/saber-musashi.png","assets/servants/saber-nero.png","assets/servants/saber-okita.png","assets/servants/saber-siegfried.png","assets/servants/saber-sigurd.png","auth/AuthContext.js","types/types.js","auth/authReducer.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/login/LoginScreen.js","components/ui/Navbar.js","data/servants.js","helpers/servantImages.js","components/servants/ServantCard.js","components/servants/ServantList.js","selectors/getServantsByClass.js","components/saber/SaberScreen.js","components/caster/CasterScreen.js","components/servants/ServantScreen.js","selectors/getServantById.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getServantByName.js","routers/DashboardRoutes.js","routers/AppRouter.js","ServantsApp.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","AuthContext","createContext","types","authReducer","state","action","type","payload","logged","PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","PublicRoute","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","getItem","name","replace","Navbar","user","useHistory","exact","activeClassName","aria-current","servants","servantImages","require","ServantCard","servant","noblePhantasm","servantClass","source","region","style","maxWidth","src","default","alt","ServantList","useMemo","includes","filter","getServantsByClass","SaberScreen","CasterScreen","ServantScreen","servantId","useParams","find","length","push","toLowerCase","goBack","SearchScreen","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","value","useForm","searchText","formValues","handleInputChange","servantsFiltered","getServantByName","onSubmit","preventDefault","placeholder","autoComplete","onChange","DashboardRoutes","path","AppRouter","init","JSON","ServantsApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6974085.chunk.js","sourcesContent":["var map = {\n\t\"./caster-anastasia.png\": 35,\n\t\"./caster-crane.png\": 36,\n\t\"./caster-leonardo.png\": 37,\n\t\"./caster-medea.png\": 38,\n\t\"./caster-merlin.png\": 39,\n\t\"./caster-nitocris.png\": 40,\n\t\"./caster-paracelsus.png\": 41,\n\t\"./caster-shakespeare.png\": 42,\n\t\"./caster-tamamo.png\": 43,\n\t\"./caster-zhuge.png\": 44,\n\t\"./saber-arthur.png\": 45,\n\t\"./saber-artoria.png\": 46,\n\t\"./saber-caesar.png\": 47,\n\t\"./saber-dioscuri.png\": 48,\n\t\"./saber-mordred.png\": 49,\n\t\"./saber-muramasa.png\": 50,\n\t\"./saber-musashi.png\": 51,\n\t\"./saber-nero.png\": 52,\n\t\"./saber-okita.png\": 53,\n\t\"./saber-siegfried.png\": 54,\n\t\"./saber-sigurd.png\": 55\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;","export default __webpack_public_path__ + \"static/media/caster-anastasia.a6e0c57d.png\";","export default __webpack_public_path__ + \"static/media/caster-crane.f84c5c72.png\";","export default __webpack_public_path__ + \"static/media/caster-leonardo.b8bc8948.png\";","export default __webpack_public_path__ + \"static/media/caster-medea.15fc2b69.png\";","export default __webpack_public_path__ + \"static/media/caster-merlin.f1b67dce.png\";","export default __webpack_public_path__ + \"static/media/caster-nitocris.4e1edc63.png\";","export default __webpack_public_path__ + \"static/media/caster-paracelsus.5427862d.png\";","export default __webpack_public_path__ + \"static/media/caster-shakespeare.9ff01acc.png\";","export default __webpack_public_path__ + \"static/media/caster-tamamo.8eb202b9.png\";","export default __webpack_public_path__ + \"static/media/caster-zhuge.04460f09.png\";","export default __webpack_public_path__ + \"static/media/saber-arthur.70ef63e1.png\";","export default __webpack_public_path__ + \"static/media/saber-artoria.fd6dcf0b.png\";","export default __webpack_public_path__ + \"static/media/saber-caesar.214db399.png\";","export default __webpack_public_path__ + \"static/media/saber-dioscuri.85dbbe23.png\";","export default __webpack_public_path__ + \"static/media/saber-mordred.cd316c6d.png\";","export default __webpack_public_path__ + \"static/media/saber-muramasa.366ebcf4.png\";","export default __webpack_public_path__ + \"static/media/saber-musashi.40c80169.png\";","export default __webpack_public_path__ + \"static/media/saber-nero.d38a435a.png\";","export default __webpack_public_path__ + \"static/media/saber-okita.55e04637.png\";","export default __webpack_public_path__ + \"static/media/saber-siegfried.43767667.png\";","export default __webpack_public_path__ + \"static/media/saber-sigurd.943a46ff.png\";","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext();","\r\nexport const types = {\r\n    login: '[auth] login',\r\n    logout: '[auth] logout',\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n    \r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n            \r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                ? <Component { ...props } /> \r\n                : <Redirect to=\"/login\" />\r\n            )}\r\n        />\r\n    )\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( !isAuthenticated )\r\n                ? <Component { ...props } /> \r\n                : <Redirect to=\"/\" />\r\n            )}\r\n        />\r\n    )\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const LoginScreen = ({ history }) => {\r\n\r\n    const { dispatch } = useContext( AuthContext );\r\n\r\n    const handleLogin = () => {\r\n\r\n        const lastPath = localStorage.getItem('lastPath') || '/';\r\n\r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                name: 'Osiris'\r\n            }\r\n        });\r\n        \r\n        history.replace( lastPath );\r\n    };\r\n    \r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>LoginScreen</h1>\r\n            <hr />\r\n\r\n            <button\r\n                className=\"btn btn-outline-primary\"\r\n                onClick={ handleLogin }\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { user:{ name }, dispatch } = useContext( AuthContext );\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n\r\n        history.replace('/login');\r\n\r\n        dispatch({\r\n            type: types.logout\r\n        });\r\n\r\n    };\r\n    \r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            <div className=\"container-fluid d-flex\">\r\n                \r\n                <Link className=\"navbar-brand bd-highlight\" to=\"/\">\r\n                    Clases\r\n                </Link>\r\n\r\n                <div className=\"navbar-nav bd-highlight\">\r\n                    <NavLink exact activeClassName=\"active\" className=\"nav-item nav-link\" aria-current=\"page\" to=\"/saber\">Saber</NavLink>\r\n                    <NavLink exact activeClassName=\"active\" className=\"nav-item nav-link\" to=\"/caster\">Caster</NavLink>\r\n                    <NavLink exact activeClassName=\"active\" className=\"nav-item nav-link\" to=\"/search\">Search</NavLink>\r\n                </div>\r\n\r\n                <div className=\"navbar-nav ms-auto bd-highlight\">\r\n                    <span className=\"nav-item nav-link text-info\">\r\n                        { name }\r\n                    </span>\r\n                    <button \r\n                        className=\"nav-item nav-link btn\"\r\n                        onClick={ handleLogout }\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n};","export const servants = [\r\n    {\r\n        'id': 'saber-artoria',\r\n        'servant':'Artoria Pendragon', \r\n        'servantClass':'Saber', \r\n        'noblePhantasm':'Excalibur',\r\n        'region':'England',\r\n        'source':'Arthurian Legends'\r\n    },\r\n    {\r\n        'id': 'saber-okita',\r\n        'servant':'Okita Sōji', \r\n        'servantClass':'Saber', \r\n        'noblePhantasm':'Mumyou Sandan-Zuki',\r\n        'region':'Japan',\r\n        'source':'Historical Fact'\r\n    },\r\n    {\r\n        'id': 'saber-mordred',\r\n        'servant':'Mordred', \r\n        'servantClass':'Saber', \r\n        'noblePhantasm':'Clarent Blood Arthur',\r\n        'region':'England',\r\n        'source':'Arthurian Legends'\r\n    },\r\n    {\r\n        'id': 'saber-muramasa',\r\n        'servant':'Senji Muramasa', \r\n        'servantClass':'Saber', \r\n        'noblePhantasm':'Tsumukari Muramasa',\r\n        'region':'Japan',\r\n        'source':'Historical fact'\r\n    },\r\n    {\r\n        'id': 'saber-siegfried',\r\n        'servant':'Siegfried', \r\n        'servantClass':'Saber', \r\n        'noblePhantasm':'Balmung',\r\n        'region':'Germany',\r\n        'source':'Nibelungenlied (The Song of the Nibelungs)'\r\n    },\r\n    {\r\n        'id': 'saber-caesar',\r\n        'servant':'Gaius Julius Caesar', \r\n        'servantClass':'Saber', \r\n        'noblePhantasm':'Crocea Mors',\r\n        'region':'Europe',\r\n        'source':'Historical Fact'\r\n    },\r\n    {\r\n        'id': 'saber-musashi',\r\n        'servant':'Miyamoto Musashi', \r\n        'servantClass':'Saber', \r\n        'noblePhantasm':'Rikudou Gorin - Kurikara Tenshou',\r\n        'region':'Japan',\r\n        'source':'Historical Fact'\r\n    },\r\n    {\r\n        'id': 'saber-sigurd',\r\n        'servant':'Sigurd', \r\n        'servantClass':'Saber', \r\n        'noblePhantasm':'Bölverkr Gram',\r\n        'region':'Europe',\r\n        'source':'Norse Mythology'\r\n    },\r\n    {\r\n        'id': 'saber-dioscuri',\r\n        'servant':'Dioscuri', \r\n        'servantClass':'Saber', \r\n        'noblePhantasm':'Dioscures Tyndaridae',\r\n        'region':'Europe',\r\n        'source':'Greek Mythology'\r\n    },\r\n    {\r\n        'id': 'saber-nero',\r\n        'servant':'Nero Claudius', \r\n        'servantClass':'Saber', \r\n        'noblePhantasm':'Laus Saint Claudius',\r\n        'region':'Rome',\r\n        'source':'Historical fact'\r\n    },\r\n    {\r\n        'id': 'saber-arthur',\r\n        'servant':'Arthur Pendragon', \r\n        'servantClass':'Saber', \r\n        'noblePhantasm':'Excalibur',\r\n        'region':'England',\r\n        'source':'Arthurian Legends'\r\n    },\r\n    {\r\n        'id': 'caster-medea',\r\n        'servant':'Medea', \r\n        'servantClass':'Caster', \r\n        'noblePhantasm':'Rule Breaker',\r\n        'region':'Greece, Corinth',\r\n        'source':'Greek Mythology'\r\n    },\r\n    {\r\n        'id': 'caster-tamamo',\r\n        'servant':'Tamamo no Mae', \r\n        'servantClass':'Caster', \r\n        'noblePhantasm':'Suiten Nikkou Amaterasu Yano Shizu-Ishi',\r\n        'region':'Japan',\r\n        'source':'Japanese Mythology. One of the Three Great Monsters.'\r\n    },\r\n    {\r\n        'id': 'caster-zhuge',\r\n        'servant':'Zhuge Liang', \r\n        'servantClass':'Caster', \r\n        'noblePhantasm':'Unreturning Formation',\r\n        'region':'China',\r\n        'source':'The Romance of the Three Kingdoms'\r\n    },\r\n    {\r\n        'id': 'caster-shakespeare',\r\n        'servant':'William Shakespeare', \r\n        'servantClass':'Caster', \r\n        'noblePhantasm':'First Folio',\r\n        'region':'England',\r\n        'source':'Historical fact'\r\n    },\r\n    {\r\n        'id': 'caster-paracelsus',\r\n        'servant':'Paracelsus von Hohenheim', \r\n        'servantClass':'Caster', \r\n        'noblePhantasm':'Sword of Paracelsus',\r\n        'region':'Europe',\r\n        'source':'Historical fact'\r\n    },\r\n    {\r\n        'id': 'caster-merlin',\r\n        'servant':'Merlin', \r\n        'servantClass':'Caster', \r\n        'noblePhantasm':'Garden of Avalon',\r\n        'region':'West European countries',\r\n        'source':'Arthurian legends, and others'\r\n    },\r\n    {\r\n        'id': 'caster-nitocris',\r\n        'servant':'Nitocris', \r\n        'servantClass':'Caster', \r\n        'noblePhantasm':'Anpu Neb Ta Djeser',\r\n        'region':'Egypt',\r\n        'source':'Historical Fact'\r\n    },\r\n    {\r\n        'id': 'caster-leonardo',\r\n        'servant':'Leonardo Da Vinci', \r\n        'servantClass':'Caster', \r\n        'noblePhantasm':'Uomo Universale',\r\n        'region':'Europe',\r\n        'source':'Historical Fact'\r\n    },\r\n    {\r\n        'id': 'caster-anastasia',\r\n        'servant':'Anastasia Nikolaevna Romanova', \r\n        'servantClass':'Caster', \r\n        'noblePhantasm':'Viy Viy Viy',\r\n        'region':'Russia',\r\n        'source':'Historic Fact'\r\n    },\r\n    {\r\n        'id': 'caster-crane',\r\n        'servant':'Miss Crane', \r\n        'servantClass':'Caster', \r\n        'noblePhantasm':\"Ten'imuhō - Tsuru no Enishi Namida no Wakare\",\r\n        'region':'Japan',\r\n        'source':'Japan Folklore'\r\n    }\r\n]","\r\nexport const servantImages = require.context( '../assets/servants/', true );","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { servantImages } from '../../helpers/servantImages';\r\n\r\nexport const ServantCard = ({\r\n    id,\r\n    servant,\r\n    servantClass,\r\n    noblePhantasm,\r\n    region,\r\n    source,\r\n}) => {\r\n    return (\r\n        <div className=\"col animate__animated animate__fadeIn\">\r\n            <div className=\"card mb-3\" style={ { maxWidth: 540 } }>\r\n                <div className=\"row g-0\">\r\n                    <div className=\"col-md-4\">\r\n                        {/* <img src={`./assets/servants/${ id }.png`} className=\"card-img\" alt={ servant } /> */}\r\n                        <img src={ servantImages(`./${ id }.png`).default } className=\"card-img\" alt={ servant } />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{ servant }</h5>\r\n                            <p className=\"card-text\">{ noblePhantasm } </p>\r\n\r\n                            {/* {\r\n                                ( alter_ego !== characters )\r\n                                    && <p className=\"card-text\">{ characters }</p>\r\n                            } */}\r\n\r\n                            <p className=\"card-text\">\r\n                                <small className=\"text-muted\">{ source }</small>\r\n                            </p> \r\n\r\n                            <Link to={`./servant/${ id }`}>\r\n                                Mas...\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport { getServantsByClass } from '../../selectors/getServantsByClass';\r\nimport { ServantCard } from './ServantCard';\r\n\r\nexport const ServantList = ({ servantClass }) => {\r\n\r\n    const servants = useMemo(() => getServantsByClass( servantClass ), [ servantClass ]);\r\n    // const servants = getServantsByClass( servantClass );\r\n\r\n    return (\r\n        <div className=\"row row-cols-1 row-cols-md-1 row-cols-lg-2 g-2\">\r\n            {\r\n                servants.map( servant => (\r\n                    <ServantCard\r\n                        key={ servant.id }\r\n                        { ...servant }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n};\r\n","import { servants } from '../data/servants';\r\n\r\nexport const getServantsByClass = ( servantClass ) => {\r\n    \r\n    const validClasses = ['Saber', 'Caster'];\r\n\r\n    if ( !validClasses.includes( servantClass ) ){\r\n        throw new Error(`Clase \"${ servantClass }\" no es correcto`);\r\n    }\r\n\r\n    return servants.filter( servant => servant.servantClass === servantClass );\r\n};","import React from 'react'\r\nimport { ServantList } from '../servants/ServantList';\r\n\r\nexport const SaberScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>SaberScreen</h1>\r\n            <hr />\r\n\r\n            <ServantList servantClass=\"Saber\" />\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport { ServantList } from '../servants/ServantList'\r\n\r\nexport const CasterScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>CasterScreen</h1>        \r\n            <hr />\r\n\r\n            <ServantList servantClass=\"Caster\" />\r\n        </div>\r\n    )\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { servantImages } from '../../helpers/servantImages';\r\nimport { getServantById } from '../../selectors/getServantById';\r\n\r\n// import okita from '../../assets/servants/saber-okita.png'; // Recurso estático\r\n// const servantImages = require.context( '../../assets/servants/', true );\r\n\r\nexport const ServantScreen = ({ history }) => {\r\n\r\n    const { servantId } = useParams();\r\n\r\n    const servant = useMemo(() => getServantById( servantId ), [ servantId ]);\r\n    \r\n\r\n    if ( !servant ){\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    const {\r\n        servant:name,\r\n        servantClass,\r\n        noblePhantasm,\r\n        region,\r\n        source\r\n    } = servant;\r\n\r\n    const handleReturn = () => {\r\n\r\n        if( history.length <= 2 ){\r\n            history.push(`/${servantClass.toLowerCase()}`);\r\n        }\r\n        else{\r\n            history.goBack();  \r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"row mt-5 animate__animated animate__fadeInLeft animate__faster\">\r\n            <div className=\"col-4\">\r\n                <img\r\n                    // src={`../assets/servants/${ servantId }.png`} // desde public/assets\r\n                    // src={ okita } // import\r\n                    src={ servantImages(`./${ servantId }.png`).default }\r\n                    alt={ name }\r\n                    className=\"img-thumbnail\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col-8\">\r\n                <h3>{ name }</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"> <b>Class: </b> { servantClass } </li>\r\n                    <li className=\"list-group-item\"> <b>Noble Phantasm: </b> { noblePhantasm } </li>\r\n                    <li className=\"list-group-item\"> <b>Region: </b> { region } </li>\r\n                    <li className=\"list-group-item\"> <b>Origin: </b> { source } </li>\r\n                </ul>\r\n\r\n                <h5> Origin </h5>\r\n                <p>{ source }</p>\r\n\r\n                <button\r\n                    className=\"btn btn-outline-secondary\"\r\n                    onClick={ handleReturn }\r\n                >\r\n                    Return\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import { servants } from '../data/servants';\r\n\r\nexport const getServantById = ( id ) => {\r\n\r\n    return servants.find( servant => servant.id === id );\r\n};","import React, { useMemo } from 'react';\r\nimport queryString from 'query-string';\r\nimport { ServantCard } from '../servants/ServantCard';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useLocation } from 'react-router';\r\nimport { getServantByName } from '../../selectors/getServantByName';\r\n\r\nexport const SearchScreen = ({ history }) => {\r\n\r\n    const location = useLocation();\r\n    \r\n    const { q = '' } = queryString.parse(location.search);    \r\n    const [ formValues, handleInputChange ] = useForm( { searchText: q } );\r\n    const { searchText } = formValues;\r\n    \r\n    const servantsFiltered = useMemo(() => getServantByName( q ), [q])\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        history.push(`?q=${searchText}`)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>SearchScreen</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4>Search Form</h4>\r\n                    <hr />\r\n\r\n                    <form onSubmit={ handleSearch }>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"find a servant\"\r\n                            className=\"form-control\"\r\n                            name=\"searchText\"\r\n                            autoComplete=\"off\"\r\n                            value={ searchText }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n                        <div className=\"d-grid gap-2\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn my-1 btn-outline-primary\"\r\n                            >\r\n                                Search...\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-7\">\r\n                    <h4>Results</h4>\r\n                    <hr />\r\n\r\n                    { \r\n                        ( q === '' ) ?\r\n                            <div className=\"alert alert-info\">\r\n                                Search a servant\r\n                            </div>\r\n                        : ( servantsFiltered.length === 0 ) &&\r\n                            <div className=\"alert alert-danger\">\r\n                                Servant not found\r\n                            </div>\r\n                    }\r\n\r\n                    {/* { ( q === '' )\r\n                        &&\r\n                        <div className=\"alert alert-info\">\r\n                            Search a servant\r\n                        </div>\r\n                    }\r\n\r\n                    { ( q !== '' && servantsFiltered.length === 0 )\r\n                        &&\r\n                        <div className=\"alert alert-danger\">\r\n                            Servant not founded\r\n                        </div>\r\n                    } */}\r\n\r\n                    {\r\n                        servantsFiltered.map( servant => (\r\n                            <ServantCard\r\n                                key={servant.id}\r\n                                { ...servant }\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","\r\nimport { useState } from \"react\";\r\n\r\nexport const useForm = ( initialState = {}) => {\r\n\r\n    const [values, setValues] = useState( initialState );\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        })\r\n    };\r\n    \r\n    return [ values, handleInputChange, reset ];\r\n}","import { servants } from \"../data/servants\";\r\n\r\nexport const getServantByName = ( name = '' ) => {\r\n    \r\n    if ( name === '' ){\r\n        return [];\r\n    }\r\n\r\n    name = name.toLowerCase();\r\n    return servants.filter( servant => servant.servant.toLowerCase().includes( name ) );\r\n\r\n};","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { Navbar } from '../components/ui/Navbar';\r\n\r\nimport { SaberScreen } from '../components/saber/SaberScreen';\r\nimport { CasterScreen } from '../components/caster/CasterScreen';\r\nimport { ServantScreen } from '../components/servants/ServantScreen';\r\nimport { SearchScreen } from '../components/search/SearchScreen';\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <div className=\"container mt-2\">\r\n                <Switch>\r\n                    <Route exact path=\"/saber\" component={SaberScreen} />\r\n                    <Route exact path=\"/caster\" component={CasterScreen} />\r\n                    <Route exact path=\"/servant/:servantId\" component={ServantScreen} />\r\n                    <Route exact path=\"/search\" component={SearchScreen} />\r\n\r\n                    <Redirect to=\"/saber\" />\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n","import React, { useContext } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch\r\n} from \"react-router-dom\";\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\nimport { AuthContext } from '../auth/AuthContext';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const { user } = useContext(AuthContext);\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ user.logged }\r\n                    />\r\n                    \r\n                    <PrivateRoute\r\n                        path=\"/\"\r\n                        component={ DashboardRoutes }\r\n                        isAuthenticated={ user.logged }\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n};\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { AuthContext } from './auth/AuthContext';\r\nimport { authReducer } from './auth/authReducer';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n\r\nconst init = () => {\r\n    return JSON.parse( localStorage.getItem('user') ) || { logged: false }\r\n}\r\n\r\nconst ServantsApp = () => {\r\n\r\n    const [ user, dispatch ] = useReducer( authReducer, {}, init )\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user) );\r\n    }, [user])\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, dispatch }}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n    )\r\n};\r\n\r\nexport default ServantsApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ServantsApp from './ServantsApp';\n\nReactDOM.render(\n  <ServantsApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}